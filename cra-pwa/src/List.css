*, *:before, *:after {
  box-sizing: border-box;
}

body {
  margin: 0px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif, 'Open Sans';
  background-color: rgb(104, 104, 104);
  color: #444;
}

h1, p {
  margin: 0 0 1em 0;
}

.wrapper {
  max-width: 1800px;
  margin: 20px 5px 20px 5px;
  display: grid; /*contents; grid; flex;*/
  grid-gap: 10px;
  align-items: stretch;
  justify-items: stretch;
}

/*наступний блок включається коли ширина стає більша за 668*/
@media screen and (min-width: 668px) {


  .wrapper {
    
    /*У grid, есть специальная система измерения fr, которая не может быть нулевым или отрицательным значением. Она рассчитывается после того, как все остальные значения, отличные от fr, были рассчитаны.*/
    /*В стилях мы указали что если ширина экрана больше, чем 768px делим блок .wrapper на 2 части (1fr и 3fr). Так же мы указываем, что header и footer у нас начинаются с первой колонки и заканчиваются на последней (grid-column: 1 / -1;).*/
    grid-template-columns: 3fr 3fr;
  }
   .content1 {
    float: left;
    width: 30%;
  }
  .content2{
    float:left;
    width: 30%;
  }
  .content3{
    float:left;
    width: 30%;
  }
  header, footer {
    
    grid-column: 1 / -1;
    /* needed for the floated layout */
    clear: both;
  }

}

/*наступний блок включається коли ширина стає більша за 1200*/
@media screen and (min-width: 1200px) {
 .wrapper {
    
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
  /* no grid support? */
  aside {
    float: left;
    width: 20%;
  }

  .content1 {
    float: left;
    width: 30%;
  }
  .content2{
    float:left;
    width: 30%;
  }
  .content3{
    float:left;
    width: 30%;
  }


}

.wrapper > * {
  background-color: #444;
  color: #fff;
  border-radius: 5px;
  padding: 20px;
  font-size: 150%;
  /* needed for the floated layout*/
  margin-bottom: 10px;
}

/* We need to set the widths used on floated items back to auto, and remove the bottom margin as when we have grid we have gaps. */
@supports (display: grid) {
  .wrapper > * {
    width: auto;
    margin: 0;
  }
}

.grayed {
  background-color: lightgray;
}

.btn {
  background-color: #4CAF50; /* Green */
  color: white;
  padding: 15px 32px;
  text-align: center;
  text-decoration: none;
  display: inline-block;
  font-size: 16px;
  border-radius: 8px;
  border: 3px solid #005f03; /* Green */
  transition-duration: 0.4s;
}
.btn:hover {
  background-color: white; /* white */
  border: 3px solid #005f03; /* Green */
  color: rgb(6, 70, 0);
  border-radius: 8px;
}

.divitem {
    
    background-color: rgb(250, 251, 252);
    color: rgb(9, 30, 66);
    padding: 8px;
    margin-bottom: 8px;
    border-radius: 2px;
    font-size: 18px;
    border: 3px solid rgb(88, 88, 88);
    position: relative;
    border-radius: 8px;
}

.styleinput {
  width: auto;
  color:black;
  font-size: 16px;
  padding: 15px 32px;
  display: inline-block;
  border-radius: 8px;
  background-color: rgb(219, 219, 219);
}